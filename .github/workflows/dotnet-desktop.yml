name: Build and Publish NuGet Package

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v4

    # Set up .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore src/LazyFramework.DX.csproj --source https://api.nuget.org/v3/index.json --source https://pkgs.dev.azure.com/uipath/Public.Feeds/_packaging/UiPath-Official/nuget/v3/index.json

    # Build the project
    - name: Build
      run: dotnet build src/LazyFramework.DX.csproj --configuration Release

    # Capture the .nupkg file path
    - name: Get .nupkg file path
      id: get_nupkg_path
      shell: bash
      run: |
        # Capture the full path of the .nupkg file
        PACKAGE_PATH=$(find src/bin/Release/ -name "*.nupkg" | head -n 1)
        echo "PACKAGE_PATH=$PACKAGE_PATH" >> $GITHUB_ENV
        echo "Package path is $PACKAGE_PATH"

    # Extract version number (from the .nupkg or .csproj)
    - name: Extract version
      id: extract_version
      run: |
        # Assuming version is in the .csproj file or other known location
        VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/LazyFramework.DX.csproj)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Extracted version: $VERSION"

    # Publish to NuGet
    - name: Publish to NuGet
      run: |
        echo "Publishing package to NuGet..."
        dotnet nuget push ${{ env.PACKAGE_PATH }} --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    # Publish to GitHub
    - name: Publish to GitHub
      run: |
        echo "Publishing package to GitHub..."
        dotnet nuget push ${{ env.PACKAGE_PATH }} --api-key ${{ secrets.TOKEN_GITHUB }} --source "https://nuget.pkg.github.com/yashbrahmbhatt/index.json"

    # Create GitHub Release
    - name: Create GitHub Release
      uses: ghcli/gh-actions@v2
      with:
        token: ${{ secrets.TOKEN_GITHUB }}
        tag_name: "v${{ env.VERSION }}"
        release_name: "Release v${{ env.VERSION }}"
        body: "Release notes for version ${{ env.VERSION }}."
        files: ${{ env.PACKAGE_PATH }}
